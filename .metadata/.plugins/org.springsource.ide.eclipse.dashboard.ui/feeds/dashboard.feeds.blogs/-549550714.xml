<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2016-07-08T22:14:11Z</updated>
  <entry>
    <title>Java DSL for Spring Integration 1.2 M1 and 1.1.2 are available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/08/java-dsl-for-spring-integration-1-2-m1-and-1-1-2-are-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2016-07-08:2550</id>
    <updated>2016-07-08T22:14:11Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce that the Java DSL for Spring Integration &lt;code&gt;1.2 M1&lt;/code&gt; is available now!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;First of I’d like to thank everyone who created issues, raised Pull Requests, provided feedback or just asked questions on StackOverflow.
Without the community we couldn&amp;#8217;t be the successful project we are today!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The artifact &lt;code&gt;org.springframework.integration:spring-integration-java-dsl:1.2.0.M1&lt;/code&gt; is available in the &lt;a href="http://repo.spring.io/milestone"&gt;Milestone repo&lt;/a&gt;.
So, give it a shot and don&amp;#8217;t hesitate to raise a &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/issues"&gt;GH issue&lt;/a&gt; for any feedback!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Some highlights of the current iteration:&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="apache-kafka-0-9-support" class="sect0"&gt;&lt;a class="anchor" href="#apache-kafka-0-9-support"&gt;&lt;/a&gt;Apache Kafka 0.9 support&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Based on the recently released &lt;a href="https://spring.io/blog/2016/07/04/spring-for-apache-kafka-1-0-and-spring-integration-kafka-2-0-go-ga"&gt;Spring for Apache Kafka&lt;/a&gt; project, a new &lt;code&gt;Kafka09&lt;/code&gt; factory has been introduced.
This is straightforward Java DSL factory for producing &lt;code&gt;IntegrationComponentSpec&lt;/code&gt; fluent API builders for adapters based on the a Spring for Apache Kafka foundation.
An existing &lt;code&gt;Kafka&lt;/code&gt; factory for Apache Kafka &lt;code&gt;0.8&lt;/code&gt; support is still present for backward compatibility.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="runtime-flow-registration" class="sect0"&gt;&lt;a class="anchor" href="#runtime-flow-registration"&gt;&lt;/a&gt;Runtime flow registration&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In many cases it would be better to specify an integration flow based on the system state or even during some business function invocation.
Or even make it volatile after execution.
For this purpose an &lt;code&gt;IntegrationFlowContext&lt;/code&gt; component has been introduced to let the manual &lt;code&gt;IntegrationFlow&lt;/code&gt; control.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Autowired
private IntegrationFlowContext context;
...

IntegrationFlow myFlow = f -&amp;gt; f
  			.&amp;lt;String, String&amp;gt;transform(String::toUpperCase)
   			.transform("Hello, "::concat);

String flowId = this.context.register(myFlow);
MessagingTemplate messagingTemplate = this.context.messagingTemplateFor(flowId);

assertEquals("Hello, SPRING",
            messagingTemplate.convertSendAndReceive("spring", String.class));

this.context.remove(flowId);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See &lt;code&gt;IntegrationFlowContext&lt;/code&gt; JavaDocs for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="operator-log" class="sect0"&gt;&lt;a class="anchor" href="#operator-log"&gt;&lt;/a&gt;Operator log()&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For convenience to log the message journey Spring Integration manner (a-la &lt;code&gt;&amp;lt;logging-channel-adapter&amp;gt;&lt;/code&gt;), a new &lt;code&gt;log()&lt;/code&gt; operator has been introduced.
Underneath it is represented just by &lt;code&gt;WireTap&lt;/code&gt; &lt;code&gt;ChannelInterceptor&lt;/code&gt; and &lt;code&gt;LoggingHandler&lt;/code&gt; as subscriber.
It is responsible to log message incoming into the next endpoint:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;.filter(...)
.log(LoggingHandler.Level.ERROR, "test.category", m -&amp;gt; m.getHeaders().getId())
.route(...)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In this example an &lt;code&gt;id&lt;/code&gt; header will be logged with &lt;code&gt;ERROR&lt;/code&gt; level onto "test.category" only for messages passed the filter and before routing.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="messagechannelspec-wiretap" class="sect0"&gt;&lt;a class="anchor" href="#messagechannelspec-wiretap"&gt;&lt;/a&gt;MessageChannelSpec.wireTap()&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A &lt;code&gt;.wireTap()&lt;/code&gt; fluent API has been introduced for &lt;code&gt;MessageChannelSpec&lt;/code&gt; builders.
Now a target configuration gains much more from Java DSL usage:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Bean
public QueueChannelSpec myChannel() {
    return MessageChannels
            .queue()
            .wireTap("loggingFlow.input");
}

@Bean
public IntegrationFlow loggingFlow() {
    return f -&amp;gt; f.log();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id="typed-routers" class="sect0"&gt;&lt;a class="anchor" href="#typed-routers"&gt;&lt;/a&gt;Typed routers&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Having a pure Java instantiation for beans it really looks enough organic to have routing keys as any desired type and avoid converting to &lt;code&gt;String&lt;/code&gt; everything.
Plus the type relaxing let us have configuration as generic-aware:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Bean
public IntegrationFlow payloadTypeRouteFlow() {
    return f -&amp;gt; f
          .&amp;lt;Object, Class&amp;gt;route(Object::getClass, m -&amp;gt; m
                         .channelMapping(String.class, "stringsChannel")
                         .channelMapping(Integer.class, "integersChannel"));
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/commits/v1.2.0.M1"&gt;commit history&lt;/a&gt; for &lt;code&gt;1.2.0.M1&lt;/code&gt; version for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="bug-fixes" class="sect0"&gt;&lt;a class="anchor" href="#bug-fixes"&gt;&lt;/a&gt;Bug Fixes&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The maintenance version &lt;code&gt;1.1.3&lt;/code&gt; has been also release with several nasty bug fixes and Spring Integration 4.3 compatibility.
The &lt;code&gt;org.springframework.integration:spring-integration-java-dsl:1.1.3.RELEASE&lt;/code&gt; artifact is available in the &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search|ga|1|spring-integration-java-dsl"&gt;Maven Central&lt;/a&gt;.
It is recommended to upgrade for everyone, especially if you use &lt;code&gt;JMS&lt;/code&gt; factory and beans which implement &lt;code&gt;ApplicationListener&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="next-steps" class="sect0"&gt;&lt;a class="anchor" href="#next-steps"&gt;&lt;/a&gt;Next Steps&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We expect the next Milestone 2 for version &lt;code&gt;1.2&lt;/code&gt; enough soon, over a couple weeks, with an RC and release somewhere in the middle of August.
At the same time we are going to absorb &lt;code&gt;spring-integration-java-dsl&lt;/code&gt; project into &lt;a href="http://projects.spring.io/spring-integration/"&gt;Spring Integration Core&lt;/a&gt; with version &lt;code&gt;5.0&lt;/code&gt; and Java 8 code base.
The current &lt;code&gt;1.2&lt;/code&gt; version will be still supported, but just for bug fixes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-integration-java-dsl"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/wiki/Spring-Integration-Java-DSL-Reference"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>CVE-2016-5007 Spring Security / MVC Path Matching Inconsistency</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/08/cve-2016-5007-spring-security-mvc-path-matching-inconsistency" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-07-08:2549</id>
    <updated>2016-07-08T13:56:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/07/04/spring-framework-4-3-1-and-4-2-7-available-now"&gt;Spring Framework 4.3.1&lt;/a&gt; and &lt;a href="https://spring.io/blog/2016/07/07/spring-security-4-1-1-released"&gt;Spring Security 4.1.1&lt;/a&gt; provide fixes for &lt;a href="http://pivotal.io/security/cve-2016-5007"&gt;CVE-2016-5007&lt;/a&gt; "Spring Security / MVC Path Matching Inconsistency".&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Applications using Spring Security and Spring MVC should upgrade to Spring Security 4.1.1+ and Spring Framework 4.3.1+ and use the &lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.x/reference/htmlsingle/#mvc-requestmatcher"&gt;MvcRequestMatcher&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Additional details and further mitigations can be found in &lt;a href="http://pivotal.io/security/cve-2016-5007"&gt;CVE-2016-5007&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring IO Platform 2.0.6.RELEASE</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/08/spring-io-platform-2-0-6-release" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2016-07-08:2548</id>
    <updated>2016-07-08T13:05:38Z</updated>
    <content type="html">&lt;p&gt;I am pleased to announce that &lt;a href="http://platform.spring.io/platform"&gt;Spring IO Platform&lt;/a&gt; 2.0.6.RELEASE is now available from both &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3Aio.spring.platform"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This maintenance release upgrades the versions of a number of the projects in the Platform:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Boot 1.3.6.RELEASE&lt;/li&gt;
  &lt;li&gt;Spring Framework 4.2.7.RELEASE&lt;/li&gt;
  &lt;li&gt;Spring Integration 4.2.8.RELEASE&lt;/li&gt;
  &lt;li&gt;Spring REST Docs 1.0.1.RELEASE&lt;/li&gt;
  &lt;li&gt;Spring Retry 1.1.3.RELEASE&lt;/li&gt;
  &lt;li&gt;Spring Security OAuth 2.0.10.RELEASE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://platform.spring.io/platform"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/platform/docs/2.0.6.RELEASE/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 4.1.1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/07/spring-security-4-1-1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-07-07:2547</id>
    <updated>2016-07-07T12:25:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce the release of Spring Security 4.1.1.RELEASE which resolves over &lt;a href="https://github.com/spring-projects/spring-security/milestone/87?closed=1"&gt;50 issues&lt;/a&gt;. This release provides mitigation for &lt;a href="https://spring.io/blog/2016/07/08/cve-2016-5007-spring-security-mvc-path-matching-inconsistency"&gt;CVE-2016-5007&lt;/a&gt; There are also lots of bug fixes, but there are also a few notable enhancements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.x/reference/htmlsingle/#mvc-requestmatcher"&gt;MvcRequestMatcher&lt;/a&gt; provides deep integration with Spring MVC to ensure consistent path matching strategies for authorization rules&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.x/reference/htmlsingle/#cors"&gt;CORS Support&lt;/a&gt; that can leverage Spring MVC&amp;#8217;s CORS configuration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.x/reference/htmlsingle/#csrf-cookie"&gt;CookieCsrfTokenRepository.withHttpOnlyFalse()&lt;/a&gt; for easily integrating with AngularJS applications&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="contributions" class="sect0"&gt;&lt;a class="anchor" href="#contributions"&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Without the community we couldn&amp;#8217;t be the successful project we are today. I&amp;#8217;d like to thank everyone that created issues &amp;amp; provided feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="feedback-please" class="sect0"&gt;&lt;a class="anchor" href="#feedback-please"&gt;&lt;/a&gt;Feedback Please&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you have feedback on this release, I encourage you to reach out via &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;StackOverflow&lt;/a&gt;, &lt;a href="https://github.com/spring-projects/spring-security/issues"&gt;GitHub Issues&lt;/a&gt;, or via the comments section. You can also ping me &lt;a href="https://twitter.com/rob_winch"&gt;@rob_winch&lt;/a&gt; or Joe &lt;a href="https://twitter.com/joe_grandja"&gt;@joe_grandja&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Of course the best feedback comes in the form of &lt;a href="https://github.com/spring-projects/spring-security/blob/master/CONTRIBUTING.md"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.1.RELEASE/reference/htmlsingle/"&gt;Reference&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.1.RELEASE/guides/html5/"&gt;Guides&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Tool Suite 3.8.0 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/06/spring-tool-suite-3-8-0-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Martin Lippert</name>
    </author>
    <id>tag:spring.io,2016-07-06:2546</id>
    <updated>2016-07-06T08:50:11Z</updated>
    <content type="html">&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;I am happy to announce the 3.8.0 release of the Spring Tool Suite, our Eclipse-based tooling.&lt;/p&gt;
&lt;p&gt;Highlights from this release include:&lt;/p&gt;
&lt;ul&gt;&#xD;
&lt;li&gt;updated to Eclipse Neon 4.6 GA&lt;/li&gt;&#xD;
&lt;li&gt;all new Spring Boot code templates&lt;/li&gt;&#xD;
&lt;li&gt;improved Spring Boot YML and property editors (more advanced content-assist, quick-fixes, and more)&lt;/li&gt;&#xD;
&lt;li&gt;many small improvements to improve developer productivity&lt;/li&gt;&#xD;
&lt;li&gt;Pivotal tc Server updated to 3.1.4&lt;/li&gt;&#xD;
&lt;/ul&gt;
&lt;p&gt;To download the distributions, please go visit:&lt;/p&gt;
&lt;ul&gt;&#xD;
&lt;li&gt;Spring Tool Suite: &lt;a href="https://spring.io/tools/sts/all"&gt;https://spring.io/tools/sts/all&lt;/a&gt;&lt;/li&gt;&#xD;
&lt;/ul&gt;
&lt;p&gt;Detailed new and noteworthy notes can be found here: &lt;a href="http://docs.spring.io/sts/nan/v380/NewAndNoteworthy.html"&gt;STS 3.8.0 New &amp;amp; Noteworthy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 1.4.0.RC1 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/05/spring-boot-1-4-0-rc1-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2016-07-05:2545</id>
    <updated>2016-07-05T12:23:55Z</updated>
    <content type="html">&lt;p&gt;It is my pleasure to announce that the release candidate of Spring Boot 1.4 is available now from the &lt;a href="http://repo.spring.io/milestone/"&gt;Spring milestone repository&lt;/a&gt;. This milestone concludes 6 months of work in the 1.4 line, closing over &lt;a href="https://github.com/spring-projects/spring-boot/issues?q=milestone%3A1.4.0.RC1+is%3Aclosed"&gt;140 issues and pull requests&lt;/a&gt;! Thanks to everyone that has contributed.&lt;/p&gt;
&lt;p&gt;Highlights of the new release include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Unified &lt;code&gt;@EntityScan&lt;/code&gt; for JPA, MongoDB, Neo4j, Couchbase and Cassandra&lt;/li&gt;
  &lt;li&gt;Auto-configured &lt;code&gt;RestTemplateBuilder&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Support for pure rest client tests via &lt;code&gt;@RestClientTest&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Support for Jest (Elasticsearch rest client)&lt;/li&gt;
  &lt;li&gt;Upgrades to Spring Integration 4.3, Spring AMQP 1.6, Spring REST Docs 1.1, MongoDB Java Driver 3 and more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a complete list of changes, and upgrade instructions, see the &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.4-Release-Notes"&gt;Spring Boot 1.4 Release Notes&lt;/a&gt; on the WIKI and the updated &lt;a href="http://docs.spring.io/spring-boot/docs/1.4.0.RC1/reference/htmlsingle/"&gt;reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At this point, it is &lt;em&gt;very&lt;/em&gt; important for us that you give &lt;code&gt;1.4.0.RC1&lt;/code&gt; a try on your projects. Check &lt;a href="http://projects.spring.io/spring-boot/"&gt;the QuickStart instruction&lt;/a&gt; to upgrade your project to &lt;code&gt;1.4.0.RC1&lt;/code&gt; or generate an empty project on &lt;a href="https://start.spring.io"&gt;https://start.spring.io&lt;/a&gt; for a concrete example. &lt;/p&gt;
&lt;p&gt;In particular, we&amp;rsquo;ve decided to revert to Hibernate 5.0 and have already identified a few binary incompatible changes in 5.2. It would be extremely helpful for us to &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;get some feedback&lt;/a&gt;, in particular if you are using &lt;code&gt;HibernateTemplate&lt;/code&gt; in your project.&lt;/p&gt;
&lt;p&gt;Our next stop is &lt;code&gt;1.4.0.RELEASE&lt;/code&gt; scheduled alongside Spring Framework &lt;code&gt;4.3.2.RELEASE&lt;/code&gt; at the end of the month. Stay tuned!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - July 5th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/05/this-week-in-spring-july-5th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-07-05:2544</id>
    <updated>2016-07-05T08:55:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;m in rainy but beautiful Seoul, South Korea and &lt;a href="https://jsug.doorkeeper.jp/events/47900"&gt;Tokyo (come join me for a talk on Wednesday!)&lt;/a&gt;, &lt;a href="http://kanjava.connpass.com/event/35302/"&gt;Osaka&lt;/a&gt;, and Hiroshima, Japan where I&amp;rsquo;ll be doing a few meetups and talking to businesses of all shapes and sizes. If you&amp;rsquo;re in either region, &lt;a href="http://twitter.com/starbuxman"&gt;please hit me up&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;This is my favorite time of year! As we lead to &lt;strong&gt;&lt;a href="http://springoneplatform.io"&gt;SpringOne Platform&lt;/a&gt;&lt;/strong&gt;, there&amp;rsquo;s so much good stuff being released that one can hardly keep up! I am &lt;em&gt;really&lt;/em&gt; looking forward to this year&amp;rsquo;s &lt;strong&gt;&lt;a href="http://springoneplatform.io"&gt;SpringOne Platform&lt;/a&gt;&lt;/strong&gt; show, coming in early August. It&amp;rsquo;s an amazing time to build applications, and SpringOne Platform is in a unique position to capture the larger discussion: why do we #devops, #cloud, #agile, or #microservice? Join the discussion August 1-4, 2016 in beautiful Las Vegas and let&amp;rsquo;s find out!&lt;/p&gt;
&lt;p&gt;So, let&amp;rsquo;s get to it!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;JDriven&amp;rsquo;s very own Mr. Haki put together a really cool post &lt;a href="http://blog.jdriven.com/2016/07/spring-sweets-using-groovy-configuration-propertysource/"&gt;on using the Groovy language&amp;rsquo;s ConfigSlurper as a Spring framework &lt;code&gt;PropertySource&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://toomuchcoding.com/blog/2016/06/24/accurest-becomes-part-of-the-spring-cloud-contract"&gt;the Accurest framework has been integrated into Spring Cloud as the basis for the upcoming Spring Cloud Contract&lt;/a&gt; (due to be released in Spring Cloud Camden), designed to promote CDC (contract driven consumers).&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/07/04/spring-boot-1-3-6-available-now"&gt;Spring Boot 1.3.6 is now available&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/07/04/spring-framework-4-3-1-and-4-2-7-available-now"&gt;Spring Framework 4.3.1 and 4.2.7 are now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/07/04/spring-for-apache-kafka-1-0-and-spring-integration-kafka-2-0-go-ga"&gt;Spring for Apache Kafka 1.0 and Spring Integration Kafka 2.0 go GA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/07/01/spring-cloud-brixton-sr2-is-available"&gt;Spring Cloud Brixton SR2 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/06/30/spring-session-1-2-1-released"&gt;Spring Session lead Rob Winch has just announced Spring Session 1.2.1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/06/29/spring-for-apache-hadoop-2-4-0-ga-released"&gt;Spring for Apache Hadoop 2.4.0.GA has been released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring test ninja &lt;a href="https://twitter.com/sam_brannen/status/750070377339097092"&gt;Sam Brannen just pushed JUnit 5 support to master for Spring Framework 5&lt;/a&gt;! This is really cool and a natural next step given all the work Pivotal, and Sam in particular, has done as a contributor to JUnit.&lt;/li&gt;
  &lt;li&gt;the OpenCredo blog has a nice post &lt;a href="https://opencredo.com/hal-hypermedia-api-spring-hateoas/"&gt;on using HAL and (Spring) HATEOAS&lt;/a&gt; when implementing Microservices&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 1.3.6 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/04/spring-boot-1-3-6-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2016-07-04:2543</id>
    <updated>2016-07-04T15:40:26Z</updated>
    <content type="html">&lt;p&gt;Right after &lt;a href="https://spring.io/blog/2016/07/04/spring-framework-4-3-1-and-4-2-7-available-now"&gt;Spring Framework 4.2.7&lt;/a&gt;, Spring Boot 1.3.6 has been released and is available now from &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.springframework.boot%22"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This maintenance release includes a &lt;a href="https://github.com/spring-projects/spring-boot/issues?q=milestone%3A1.3.6+is%3Aclosed"&gt;number of fixes&lt;/a&gt; and 3rd party dependency updates.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Framework 4.3.1 and 4.2.7 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/04/spring-framework-4-3-1-and-4-2-7-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2016-07-04:2542</id>
    <updated>2016-07-04T11:16:16Z</updated>
    <content type="html">&lt;p&gt;It is my pleasure to announce that the Spring Framework &lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10000&amp;version=15568"&gt;4.3.1&lt;/a&gt; and &lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10000&amp;version=15567"&gt;4.2.7&lt;/a&gt; maintenance releases &lt;a href="http://projects.spring.io/spring-framework"&gt;are available now&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first maintenance release of the 4.3 line contains 40 fixes and improvements and is the base for the upcoming Spring Boot 1.4 release. The master branch has now switched to 5.0 and we&amp;rsquo;ll start merging 5.0 features in preparation for &lt;code&gt;5.0.0.M1&lt;/code&gt; later this month.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-framework/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-framework"&gt;GitHub&lt;/a&gt; | &lt;a href="https://jira.spring.io/browse/SPR"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/htmlsingle/"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more details about Spring Framework 4.3, check &lt;a href="https://2016.event.springoneplatform.io/schedule/sessions/modern_java_component_design_with_spring_framework_4_3.html"&gt;Juergen Hoeller&amp;rsquo;s session&lt;/a&gt; at &lt;a href="http://springoneplatform.io"&gt;SpringOne Platform&lt;/a&gt;, which is taking place in Las Vegas between August 1-4 this year. There are many other great talks so &lt;a href="https://2016.event.springoneplatform.io/schedule/sessions"&gt;check the agenda&lt;/a&gt; and &lt;a href="https://2016.event.springoneplatform.io/register"&gt;get your ticket&lt;/a&gt; if you haven’t done so already.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring for Apache Kafka 1.0 and Spring Integration Kafka 2.0 go GA</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/04/spring-for-apache-kafka-1-0-and-spring-integration-kafka-2-0-go-ga" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2016-07-01:2540</id>
    <updated>2016-07-04T05:00:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce that the &lt;code&gt;spring-kafka&lt;/code&gt; (Spring for Apache Kafka) &lt;code&gt;1.0 GA&lt;/code&gt; and  Spring Integration Kafka &lt;code&gt;2.0 GA&lt;/code&gt; are available finally!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The artifacts &lt;code&gt;org.springframework.kafka:spring-kafka:1.0.0.RELEASE&lt;/code&gt; and &lt;code&gt;org.springframework.kafka:spring-kafka-test:1.0.0.RELEASE&lt;/code&gt; are available in the &lt;a href="https://repo.spring.io/release/"&gt;Release&lt;/a&gt; repository and Maven Central, respectively.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In addition &lt;code&gt;org.springframework.integration:spring-integration-kafka:2.0.0.RELEASE&lt;/code&gt;, fully based on the &lt;code&gt;spring-kafka-1.0.0.RELEASE&lt;/code&gt;, is available at the same repositories as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonitionblock important"&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class="icon"&gt;
&lt;div class="title"&gt;Important&lt;/div&gt;
&lt;/td&gt;
&lt;td class="content"&gt;
Just after release we figured out a &lt;a href="https://github.com/spring-projects/spring-kafka/issues/135"&gt;nasty bug&lt;/a&gt; with unacked offset commits for &lt;code&gt;RECORD&lt;/code&gt; mode.
Special thanks to &lt;a href="https://github.com/adamdec"&gt;Adam Dec&lt;/a&gt;!
So, please, meet &lt;code&gt;spring-kafka:1.0.1.RELEASE&lt;/code&gt; as well.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Of course, many thanks to everyone involved, to active community members, who provided feature requests and contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;There have been some reworks and bug fixes since the &lt;a href="https://spring.io/blog/2016/06/07/spring-for-apache-kafka-1-0-release-candidate-1-available"&gt;Release Candidate 1&lt;/a&gt; including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;rework for Manual AckMode, which indicate as a breaking change though, because the &lt;code&gt;MANUAL_IMMEDIATE_SYNC&lt;/code&gt; mode has been removed;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the &lt;code&gt;ackTime&lt;/code&gt; has now 5 seconds as default value. The same as Kafka default &lt;code&gt;auto.commit.interval.ms&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the &lt;code&gt;ackCount&lt;/code&gt; must be &lt;code&gt;&amp;gt; 0&lt;/code&gt; in case of &lt;code&gt;COUNT&lt;/code&gt; and &lt;code&gt;COUNT_TIME&lt;/code&gt; mode;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a new Spring Integration Kafka support chapter in the Reference Manual.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See also the &lt;a href="http://docs.spring.io/spring-kafka/docs/1.0.0.RELEASE/reference/htmlsingle/"&gt;Reference Manual&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="next-steps" class="sect0"&gt;&lt;a class="anchor" href="#next-steps"&gt;&lt;/a&gt;Next Steps&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We expect to release the Milestone 1 for version 1.1 enough soon, which will support Kafka 0.10, include some Spring Boot auto configuration and actuator endpoint and much more!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-kafka/"&gt;Project Page&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-kafka/docs/1.0.0.RELEASE/reference/htmlsingle/"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-kafka/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="spring-one-platform" class="sect0"&gt;&lt;a class="anchor" href="#spring-one-platform"&gt;&lt;/a&gt;Spring One Platform&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://spring.io/team/grussell"&gt;Gary Russell&lt;/a&gt; will be talking about &lt;a href="https://2016.event.springoneplatform.io/schedule/sessions/spring_for_apache_kafka.html"&gt;Spring for Apache Kafka&lt;/a&gt; at &lt;a href="http://springoneplatform.io"&gt;Spring One Platform&lt;/a&gt;, which is taking place in Las Vegas between August 1-4 this year.
There are many other great talks so &lt;a href="https://2016.event.springoneplatform.io/schedule/sessions"&gt;check the agenda&lt;/a&gt; and &lt;a href="https://2016.event.springoneplatform.io/register"&gt;get your ticket&lt;/a&gt; if you haven’t done so already.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Brixton.SR2 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/07/01/spring-cloud-brixton-sr2-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Spencer Gibb</name>
    </author>
    <id>tag:spring.io,2016-07-01:2541</id>
    <updated>2016-07-01T15:19:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Service Release 2 of the &lt;a href="http://cloud.spring.io"&gt;Spring Cloud Brixton&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="http://repo.spring.io/release"&gt;Spring Release repository&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-cloud-dependencies%22"&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is primarily a bug fix release.&lt;/p&gt;&lt;h4&gt;&lt;a href="#the-following-modules-were-updated-as-part-of-brixton-sr2" class="anchor" name="the-following-modules-were-updated-as-part-of-brixton-sr2"&gt;&lt;/a&gt;The following modules were updated as part of Brixton.SR2:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Cloud Config &lt;a href="https://github.com/spring-cloud/spring-cloud-config/issues?q=milestone:1.1.2"&gt;1.1.2.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Consul &lt;a href="https://github.com/spring-cloud/spring-cloud-consul/issues?q=milestone:1.0.2"&gt;1.0.2.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Netflix &lt;a href="https://github.com/spring-cloud/spring-cloud-netflix/issues?q=milestone:1.1.3"&gt;1.1.3.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Sleuth &lt;a href="https://github.com/spring-cloud/spring-cloud-sleuth/issues?q=milestone:1.0.2"&gt;1.0.2.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Zookeeper &lt;a href="https://github.com/spring-cloud/spring-cloud-zookeeper/issues?q=milestone:1.0.2"&gt;1.0.2.RELEASE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloudOSS"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;The Spring Cloud team will be talking about Spring Cloud at &lt;a href="http://springoneplatform.io"&gt;Spring One Platform&lt;/a&gt;, which will be taking place in Las Vegas between August 1-4 this year. There are many other great talks so &lt;a href="https://2016.event.springoneplatform.io/schedule/sessions"&gt;check the agenda&lt;/a&gt; and &lt;a href="https://2016.event.springoneplatform.io/register"&gt;get your ticket&lt;/a&gt; if you haven’t done so already. &lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Gradle Dependency Management Plugin 0.6.0 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/30/gradle-dependency-management-plugin-0-6-0-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2016-06-30:2539</id>
    <updated>2016-06-30T17:15:00Z</updated>
    <content type="html">&lt;p&gt;I am pleased to announce that &lt;a href="https://github.com/spring-gradle-plugins/dependency-management-plugin"&gt;Gradle dependency management plugin&lt;/a&gt; 0.6.0.RELEASE is now available from Maven Central, JCenter, and the &lt;a href="https://plugins.gradle.org/plugin/io.spring.dependency-management"&gt;Gradle Plugin Portal&lt;/a&gt;. &lt;/p&gt;&lt;h3&gt;&lt;a href="#gradle-3-0-compatibility" class="anchor" name="gradle-3-0-compatibility"&gt;&lt;/a&gt;Gradle 3.0 compatibility&lt;/h3&gt;
&lt;p&gt;This new release is compatible with Gradle 3.0. At the time of writing it&amp;rsquo;s tested against 3.0 M2 and the 0.6.x line will continue to track Gradle 3.0 development to maintain compatibility if at all possible.&lt;/p&gt;&lt;h3&gt;&lt;a href="#finer-control-over-bom-property-overrides" class="anchor" name="finer-control-over-bom-property-overrides"&gt;&lt;/a&gt;Finer control over bom property overrides&lt;/h3&gt;
&lt;p&gt;Previously, an imported bom&amp;rsquo;s properties could be overridden using project properties. This new release adds support for overriding a property as part of the import. &lt;code&gt;bomProperty&lt;/code&gt; can be used to override properties one at a time (and can be used multiple times to override multiple properties):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint groovy"&gt;dependencyManagement {&#xD;
    imports {&#xD;
        mavenBom(&amp;#39;com.example:example-bom:1.2.0&amp;#39;) {&#xD;
            bomProperty &amp;#39;foo.version&amp;#39;, &amp;#39;1.1.1&amp;#39;&#xD;
            bomProperty &amp;#39;bar.version&amp;#39;, &amp;#39;2.0.3&amp;#39;&#xD;
        }&#xD;
    }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, &lt;code&gt;bomProperties&lt;/code&gt; can be used along with a map of property overrides:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint groovy"&gt;dependencyManagement {&#xD;
    imports {&#xD;
        mavenBom(&amp;#39;com.example:example-bom:1.2.0&amp;#39;) {&#xD;
            bomProperties([&#xD;
                &amp;#39;foo.version&amp;#39;: &amp;#39;1.1.1&amp;#39;,&#xD;
                &amp;#39;bar.version&amp;#39;: &amp;#39;2.0.3&amp;#39;&#xD;
            ])&#xD;
        }&#xD;
    }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#learning-more" class="anchor" name="learning-more"&gt;&lt;/a&gt;Learning more&lt;/h2&gt;
&lt;p&gt;For more information about how the plugin can improve your Gradle builds, please read the &lt;a href="https://spring.io/blog/2015/02/23/better-dependency-management-for-gradle"&gt;introductory blog post&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Session 1.2.1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/30/spring-session-1-2-1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-06-30:2538</id>
    <updated>2016-06-30T12:41:07Z</updated>
    <content type="html">&lt;p&gt;I&amp;rsquo;m pleased to announce the release of Spring Session 1.2.1.RELEASE. &lt;a href="https://github.com/spring-projects/spring-session/issues?q=milestone%3A1.2.1"&gt;This release contains&lt;/a&gt; numerous bug fixes and trivial enhancements. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-session/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-session/docs/1.2.1.RELEASE/reference/html5/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;Help&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring for Apache Hadoop 2.4.0 GA released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/29/spring-for-apache-hadoop-2-4-0-ga-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Thomas Risberg</name>
    </author>
    <id>tag:spring.io,2016-06-29:2537</id>
    <updated>2016-06-29T10:19:00Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce the Spring for Apache Hadoop 2.4.0 GA release.&lt;/p&gt;
&lt;p&gt;In addition to version upgrades for Hadoop distros Spring for Apache Hadoop 2.4 adds the following improvements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Add build support for HDP 2.4 [SHDP-557]&lt;/li&gt;
  &lt;li&gt;Create utils sub-project [SHDP-556]&lt;/li&gt;
  &lt;li&gt;Fix issue where NetworkUtils may find wrong default address [SHDP-546]&lt;/li&gt;
  &lt;li&gt;Missing trailing slash on spring.yarn.applicationDir path fails to localize [SHDP-562]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the release &lt;a href="http://docs.spring.io/spring-hadoop/docs/2.4.0.RELEASE/changelog.txt"&gt;changelog&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;We continue to provide version specific artifacts with their respective transitive dependencies in the Spring IO milestone repository:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;2.4.0.RELEASE (default - Apache Hadoop stable 2.7.1)&lt;/li&gt;
  &lt;li&gt;2.4.0.RELEASE-phd30 (Pivotal HD 3.0)&lt;/li&gt;
  &lt;li&gt;2.4.0.RELEASE-cdh5 (Cloudera CDH 5.7)&lt;/li&gt;
  &lt;li&gt;2.4.0.RELEASE-hdp23 (Hortonworks HDP 2.3)&lt;/li&gt;
  &lt;li&gt;2.4.0.RELEASE-hdp24 (Hortonworks HDP 2.4)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please provide feedback so we can prioritize the work on new features scheduled for 2.5. You can use JIRA issues or GitHub issues (see project page for links).&lt;/p&gt;
&lt;p&gt;The project page is at - &lt;a href="http://projects.spring.io/spring-hadoop/"&gt;http://projects.spring.io/spring-hadoop/&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - June 28, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/28/this-week-in-spring-june-28-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-06-28:2536</id>
    <updated>2016-06-28T11:55:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;m in Munich and Wolfsburg, Germany, visiting with customers, then it&amp;rsquo;s off to Seoul, South Korea, for customers and some user group talks.&lt;/p&gt;
&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/wolfsburg-28-06-2016.jpg" /&gt;
&lt;p&gt;This week we&amp;rsquo;ve got a &lt;em&gt;lot&lt;/em&gt; of exciting Spring Cloud Data Flow news, coincident with the new Spring Cloud Data Flow RC1&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The good Dr. Pollack, co-lead of the Spring Cloud Data Flow project, &lt;a href="http://spring.io/blog/2016/06/21/spring-cloud-data-flow-1-0-rc1-released"&gt;just announced Spring Cloud Data Flow RC1&lt;/a&gt; which has updated deployers supporting deployments &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/htmlsingle/#getting-started-deploying-spring-cloud-dataflow"&gt;locally&lt;/a&gt; and to &lt;a href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-apache-yarn-1-0-0-rc1-released"&gt;Apache YARN&lt;/a&gt;, &lt;a href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-kubernetes-1-0-0-rc1-released"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-apache-mesos-1-0-0-rc1-released"&gt;Mesos&lt;/a&gt;, and of course &lt;a href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-cloud-foundry-1-0-0-m3-released"&gt;Cloud Foundry&lt;/a&gt;, an incredible integration of Spring Cloud Flo (a visualization for Spring Cloud Data Flow streams) into the Spring Cloud Data Flow Dashboard, improved OAuth support and &lt;em&gt;so&lt;/em&gt; much more!&lt;/li&gt;
  &lt;li&gt;I &lt;em&gt;really&lt;/em&gt; enjoyed Mark Paluch&amp;rsquo;s &lt;em&gt;excellent&lt;/em&gt; blog pulling back the veil of obscurity around the security secrets sensation sweeping the nation, Hashicorp Vault, and &lt;a href="http://spring.io/blog/2016/06/24/managing-secrets-with-vault"&gt;how Spring Cloud Vault works&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;I loved this discussion between our very &lt;a href="https://www.youtube.com/watch?v=cgTvvdxyIZs"&gt;own Phil Webb, Spring Boot co-founder, and Andrew Clay Shafer, one of our cloud luminaries&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;Have you seen &lt;a href="http://cloud.spring.io/spring-cloud-task-app-starters/"&gt;our new Spring Cloud Task Starters?&lt;/a&gt; From the page: &amp;ldquo;the Spring Cloud Task Application Starters are standalone executable applications that can be used for on-demand use-cases such as database migration, machine learning, and scheduled operations. These applications can run independently on variety of runtime platforms including: Cloud Foundry, Apache Yarn, Apache Mesos, Kubernetes, Docker, or even on your laptop.&amp;rdquo;&lt;/li&gt;
  &lt;li&gt;our friends at JDriven put together a nice post on &lt;a href="http://blog.jdriven.com/2016/06/spicy-spring-creating-fully-executable-jar/"&gt;creating fully executable &lt;code&gt;.jar&lt;/code&gt;s with the Spring Boot Maven plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jakub Narloch put together a great post on a custom auto-configuration to run work &lt;a href="https://jmnarloch.wordpress.com/2016/06/22/spring-boot-rxjava-scheduler/"&gt;on various RxJava schedulers with his custom component model based on Spring Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Stormpath&amp;rsquo;s own Micah Silverman put together a great post &lt;a href="https://www.javacodegeeks.com/2016/06/simple-web-app-spring-boot-spring-security-stormpath-15-minutes.html"&gt;on connecting a Spring Boot application with Stormpath Authentication in 15 minutes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Trevor Page put together a &lt;a href="http://coderscampus.com/ep01-spring-boot-rocks/"&gt;fun piece&lt;/a&gt; on how the Spring team seem hell-bent on making our lives as Java programmers easier and easier.&amp;quot; I get the feeling we&amp;rsquo;re making fans.. :-)&lt;/li&gt;
  &lt;li&gt;I haven&amp;rsquo;t read this yet, but this &lt;a href="http://www.springer.com/kr/book/9781484212394"&gt;book on Spring Cloud Data Flow looks interesting&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;In New York City? Check out this meetup &lt;a href="http://www.meetup.com/NYC-SUG/events/232197164/"&gt;on Spring Cloud Data Flow&lt;/a&gt; with Spring Cloud Data Flow lead Mark Pollack himself!&lt;/li&gt;
  &lt;li&gt;our very own Michael Coté put together a nice post, &lt;a href="https://www.infoq.com/articles/multi-cloud-choice"&gt;&amp;ldquo;Multi-Cloud is a Safety Belt for the Speed-Freaks&amp;rdquo; for InfoQ&lt;/a&gt;. His posts (and his talks and podcasts!) are insightful and often hilarious.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#springone-platform" class="anchor" name="springone-platform"&gt;&lt;/a&gt;SpringOne Platform&lt;/h2&gt;
&lt;p&gt;I am &lt;em&gt;really&lt;/em&gt; looking forward to this year&amp;rsquo;s &lt;a href="http://springoneplatform.io"&gt;SpringOne Platform&lt;/a&gt; show, coming in early August. It&amp;rsquo;s an amazing time to build applications, and SpringOne Platform is in a unique position to capture the larger discussion: why do we #devops, #cloud, #agile, or #microservice? Join the discussion August 1-4, 2016 in beautiful Las Vegas and let&amp;rsquo;s find out!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Managing Secrets with Vault</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/24/managing-secrets-with-vault" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Mark Paluch</name>
    </author>
    <id>tag:spring.io,2016-06-23:2535</id>
    <updated>2016-06-24T08:00:00Z</updated>
    <content type="html">&lt;p&gt;Passwords, API keys and confidential data fall into the category of secrets. Storing secrets the secure way is a challenge with limiting access and a true secure storage. Let&amp;rsquo;s take a look at &lt;a href="https://www.hashicorp.com/"&gt;Hashicorp&lt;/a&gt; &lt;a href="https://www.vaultproject.io/"&gt;Vault&lt;/a&gt; and how you can use it to store and access secrets.&lt;/p&gt;&lt;h2&gt;&lt;a href="#how-do-you-store-secrets" class="anchor" name="how-do-you-store-secrets"&gt;&lt;/a&gt;How do you store Secrets?&lt;/h2&gt;
&lt;p&gt;Passwords, API keys, secure Tokens, and confidential data fall into the category of secrets.&lt;br/&gt;That&amp;rsquo;s data which shouldn&amp;rsquo;t lie around. It mustn&amp;rsquo;t be available in plaintext in easy to guess locations. In fact, it must not be stored in plaintext in any location.&lt;/p&gt;
&lt;p&gt;Sensitive data can be encrypted by using the &lt;a href="http://cloud.spring.io/spring-cloud-config/spring-cloud-config.html#_encryption_and_decryption"&gt;Spring Cloud Config Server&lt;/a&gt; or &lt;a href="http://tomee.apache.org/datasource-password-encryption.html"&gt;TomEE&lt;/a&gt;.&lt;br/&gt;Encrypted data is one step better than unencrypted. Encryption imposes on the other side the need for decryption on the user side which requires a decryption key to be distributed. Now, where do you put the key? Is the key protected by a passphrase? Where do you put the passphrase? On how many systems do you distribute your key and the passphrase?&lt;/p&gt;
&lt;p&gt;As you see, encryption introduces a chicken-egg problem. Storing a decryption key gives the application the possibility to decrypt data. It also allows an attack vector. Someone who is not authorized could get access to the decryption key by having access to the machine. That person can decrypt data which is decryptable by this key. The key is static so a leaked key requires the change of keys. Data needs to be re-encrypted and credentials need to be changed. It&amp;rsquo;s not possible to discover such leakage with online measure because data can be decrypted offline once it was obtained.&lt;/p&gt;
&lt;p&gt;One approach is putting the key in a hard to guess location before the application starts and wipe the key once it was read to memory. The time in which the key is available is shortened. The attack time-frame is reduced, but still the key was there. Wiping the key works only for one application startup. Containers and microservices in the Cloud are known to be restarted once they crashed. A restart of the application is no longer possible as the key is gone.&lt;/p&gt;&lt;h2&gt;&lt;a href="#wait-there-rsquo-s-hope" class="anchor" name="wait-there-rsquo-s-hope"&gt;&lt;/a&gt;Wait, there&amp;rsquo;s hope!&lt;/h2&gt;
&lt;p&gt;Doing encryption right is tough, managing secrets is even harder if doing it yourself. Vault addresses exactly these issues. It helps to address the chicken-egg problem and it comes with encryption. Vault is a service to manage secrets. It provides an API that gives access to secrets based on policies. Any user of the API needs to authenticate and only sees the secrets for which he is authorized. Vault encrypts data using 256-bit &lt;a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard"&gt;AES&lt;/a&gt; with &lt;a href="https://en.wikipedia.org/wiki/Galois/Counter_Mode"&gt;GCM&lt;/a&gt;. It can store data in various backends (files, Amazon DynamoDB, Consul, etcd and much more). The other key aspect is that Vault never stores a key in a persistent location. Starting/restarting Vault always requires one or more operators to unseal Vault. However let&amp;rsquo;s start with the basics first.&lt;/p&gt;
&lt;p&gt;Vault isn&amp;rsquo;t the answer for all security concern. It&amp;rsquo;s worth to check the &lt;a href="https://www.vaultproject.io/docs/internals/security.html"&gt;Vault Security Model&lt;/a&gt; documentation to get an idea of the threat model.&lt;/p&gt;
&lt;p&gt;To bootstrap Vault, you need to download the binary from &lt;a href="https://www.vaultproject.io/downloads.html"&gt;https://www.vaultproject.io/downloads.html&lt;/a&gt;. Vault is written in Go and binaries are available for various platforms.&lt;br/&gt;Unzip the downloaded file and you are ready to use Vault.&lt;/p&gt;
&lt;p&gt;Start Vault Server next. You need a configuration file to specify some options.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;vault.conf&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;backend &amp;quot;inmem&amp;quot; {&#xD;
}&#xD;
&#xD;
listener &amp;quot;tcp&amp;quot; {&#xD;
  address = &amp;quot;0.0.0.0:8200&amp;quot;&#xD;
  tls_disable = 1&#xD;
}&#xD;
&#xD;
disable_mlock = true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This config is good for most platforms and to try first steps with Vault. Don&amp;rsquo;t use it in production.&lt;/p&gt;
&lt;p&gt;Start Vault with&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ vault server -config vault.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vault will start as a foreground process.&lt;/p&gt;
&lt;p&gt;Congratulations, you started Vault.&lt;/p&gt;
&lt;p&gt;Now is a good moment to open a second console to perform administrative tasks with Vault. Vault runs now in plaintext mode because TLS/SSL is disabled. You need to set the &lt;code&gt;VAULT_ADDR&lt;/code&gt; environment variable to tell the Vault client to use plaintext:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ export VAULT_ADDR=http://127.0.0.1:8200
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vault is started. It requires two additional steps before you can actually start using Vault. Vault needs to be initialized and unsealed. Initialization is the process of initial key generation. Unsealing is supplying the keys to Vault so Vault can decrypt encrypted data and start serving clients.&lt;/p&gt;
&lt;p&gt;Vault creates upon initialization two things:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The master key and key splits&lt;/li&gt;
  &lt;li&gt;A root token&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Vault allows shared keys using the &lt;a href="https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing"&gt;Shamir Secret Sharing&lt;/a&gt; algorithm. Data is usually encrypted with one key. The one, who has access to the key has full control to all data as a single person. Sometimes you don&amp;rsquo;t want that. Usually you want to distribute the master key amongst multiple people so no one single person is in control of all your encrypted data. Vault allows specifying the number of total key shares and the number of key shares required to unseal Vault during initialization. That setting cannot be changed once Vault is initialized. Initializing Vault from the console will display the full key. Initialization using the API is maybe something you want to adopt with your DevOps tooling by e.g. sending secure messages to your operators who should receive a key share.&lt;/p&gt;
&lt;p&gt;Initialize Vault with:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint bash"&gt;$ vault init -key-shares=5 -key-threshold=2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vault will display the key shares and the root key. Please note that these values are random&lt;br/&gt;and change upon every initialization. Be careful with that output as you will see it only once. There&amp;rsquo;s no way to retrieve the keys and the token afterward. Please read the instructions carefully when using Vault with real data otherwise you&amp;rsquo;ll loose your data.&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;Key 1: 99eb89735688ad7a29bb1ff27383bd1005a22a62c97f14357ea4f5f98c1d2c8c01&#xD;
Key 2: 0c5605b16905794a302603bbeb8f6c8ad5ecf7e877f0e29084f838eba931b86902&#xD;
Key 3: 7f3d88067c7e355acea4fe756a8b23fc6cd6bc671d7cb0f3d2cc8ae543dc3dc303&#xD;
Key 4: 3d37062e1704ca2a02073b29c097d5a56e7056e710f515c16b40b9cfe3698bb804&#xD;
Key 5: 4e5c8b99027f863afc85c6e741939ad3d74a1d687a7947a23d740bc109840e1205&#xD;
Initial Root Token: 9a63de21-8af7-311a-9a5a-151b6a0d4795&#xD;
&#xD;
Vault initialized with 5 keys and a key threshold of 2. Please&#xD;
securely distribute the above keys. When the Vault is re-sealed,&#xD;
restarted, or stopped, you must provide at least 2 of these keys&#xD;
to unseal it again.&#xD;
&#xD;
Vault does not store the master key. Without at least 2 keys,&#xD;
your Vault will remain permanently sealed.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you need to unseal Vault. Vault does not store the key on disk. It&amp;rsquo;s stored in memory all the time. After initializing and after (re)starting Vault you&amp;rsquo;re required to unseal Vault with the required number of key shares so Vault can serve secrets. In this case that&amp;rsquo;s two key shares. Note: There&amp;rsquo;s also a seal command to make Vault stop serving secrets.&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ vault unseal 99eb89735688ad7a29bb1ff27383bd1005a22a62c97f14357ea4f5f98c1d2c8c01&#xD;
Sealed: true&#xD;
Key Shares: 5&#xD;
Key Threshold: 2&#xD;
Unseal Progress: 1&#xD;
&#xD;
$ vault unseal 7f3d88067c7e355acea4fe756a8b23fc6cd6bc671d7cb0f3d2cc8ae543dc3dc303&#xD;
Sealed: false&#xD;
Key Shares: 5&#xD;
Key Threshold: 2&#xD;
Unseal Progress: 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once Vault is unsealed you can start storing secret data inside of Vault.&lt;/p&gt;
&lt;p&gt;Vault requires an authenticated access to proceed from here on. Vault uses tokens as generic authentication on its transport level.&lt;/p&gt;
&lt;p&gt;Remember the output from the initialization? The last item after the key shares is the root token. The easiest way for now is using the root token. The easiest way to use the token on the console is storing it in an environment variable:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ export VAULT_TOKEN=9a63de21-8af7-311a-9a5a-151b6a0d4795&#xD;
$ vault write secret/my-application password=H@rdT0Gu3ss
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The generic secret backend allows storage of arbitrary values as a key-value store. A single context can store one or many key-value tuples. Contexts can be organized hierarchically and the used data format is JSON.&lt;/p&gt;
&lt;p&gt;Vault provides besides the generic secret backend other backends that allow credential generation for MySQL, SQL Server, PostgreSQL, Consul and &lt;a href="https://www.vaultproject.io/docs/secrets/index.html"&gt;many more&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#authentication" class="anchor" name="authentication"&gt;&lt;/a&gt;Authentication&lt;/h2&gt;
&lt;p&gt;Vault works primarily with tokens. Each token is assigned to a policy that may constrain the actions and the paths. Policies use path based matching to apply rules. Tokens can get metadata (key-values) and display names assigned which makes administration a bit more ops friendly.&lt;/p&gt;
&lt;p&gt;You can create tokens manually and assign them to applications and users. Besides that there are a couple of &lt;a href="https://www.vaultproject.io/docs/auth/index.html"&gt;authentication mechanisms&lt;/a&gt; (LDAP, Username/Password, GitHub Token, …) that allow users to login and obtain a token. Tokens and authentication mechanisms can be revoked and that makes it easy to lock out a particular user.&lt;/p&gt;&lt;h2&gt;&lt;a href="#spring-cloud-vault" class="anchor" name="spring-cloud-vault"&gt;&lt;/a&gt;Spring Cloud Vault&lt;/h2&gt;
&lt;p&gt;We at Pivotal took a look at Vault and considered it a promising tool. That&amp;rsquo;s why we built &lt;a href="https://github.com/spring-cloud-incubator/spring-cloud-vault-config"&gt;Spring Cloud Vault&lt;/a&gt;. Spring Cloud Vault is a configuration extension similar to &lt;a href="https://github.com/spring-cloud/spring-cloud-config"&gt;Spring Cloud Config&lt;/a&gt;. Spring Cloud Config targets external configuration management backed by data stored in various repositories, such as GitHub, SVN or even Vault.&lt;/p&gt;
&lt;p&gt;With Spring Cloud Vault you can access your secrets inside Vault. Secrets are picked up at startup of your application. Spring Cloud Vault uses the data from your application (application name, active contexts) to determine contexts paths in which you stored your secrets.&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;/secret/{application}/{profile}&#xD;
/secret/{application}&#xD;
/secret/{defaultContext}/{profile}&#xD;
/secret/{defaultContext}
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#getting-started-with-spring-cloud-vault" class="anchor" name="getting-started-with-spring-cloud-vault"&gt;&lt;/a&gt;Getting started with Spring Cloud Vault&lt;/h2&gt;
&lt;p&gt;First you need a Spring Boot project. &lt;a href="http://start.spring.io/"&gt;start.spring.io&lt;/a&gt; is a good starting point. Any empty project is sufficient.&lt;/p&gt;&lt;h3&gt;&lt;a href="#include-the-spring-cloud-vault-starter-in-your-project" class="anchor" name="include-the-spring-cloud-vault-starter-in-your-project"&gt;&lt;/a&gt;Include the Spring Cloud Vault starter in your project&lt;/h3&gt;
&lt;p&gt;Add the following code to your build configuration file. These lines include a starter for Spring Cloud Vault with all required dependencies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-vault-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;version&amp;gt;1.0.0.BUILD-SNAPSHOT&amp;lt;/version&amp;gt;&#xD;
&amp;lt;/dependency&amp;gt;&#xD;
&#xD;
&amp;lt;repositories&amp;gt;&#xD;
    &amp;lt;repository&amp;gt;&#xD;
        &amp;lt;id&amp;gt;spring-snapshots&amp;lt;/id&amp;gt;&#xD;
        &amp;lt;name&amp;gt;Spring Snapshots&amp;lt;/name&amp;gt;&#xD;
        &amp;lt;url&amp;gt;https://repo.spring.io/libs-snapshot&amp;lt;/url&amp;gt;&#xD;
        &amp;lt;snapshots&amp;gt;&#xD;
            &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;&#xD;
        &amp;lt;/snapshots&amp;gt;&#xD;
    &amp;lt;/repository&amp;gt;&#xD;
&amp;lt;/repositories&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Gradle&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;repositories {&#xD;
    maven {&#xD;
        url &amp;#39;https://repo.spring.io/libs-snapshot&amp;#39;&#xD;
    }&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
    compile(&amp;quot;org.springframework.cloud:spring-cloud-vault-starter-config:1.0.0.BUILD-SNAPSHOT&amp;quot;)&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make sure to include the Snapshots repository when using &lt;code&gt;SNAPSHOT&lt;/code&gt; dependencies.&lt;/p&gt;&lt;h3&gt;&lt;a href="#setup-the-configuration" class="anchor" name="setup-the-configuration"&gt;&lt;/a&gt;Setup the configuration&lt;/h3&gt;
&lt;p&gt;Spring Cloud Vault uses by default &lt;code&gt;application&lt;/code&gt; as the default context and the value of &lt;code&gt;spring.application.name&lt;/code&gt; as application context. All configuration needs to be specified in the bootstrap configuration. For this example we use &lt;code&gt;bootstrap.yml&lt;/code&gt; in &lt;code&gt;src/main/resources&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint yaml"&gt;spring:&#xD;
    application.name: my-application&#xD;
    cloud.vault:&#xD;
        token: 9a63de21-8af7-311a-9a5a-151b6a0d4795&#xD;
        scheme: http
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;spring.cloud.vault.scheme&lt;/code&gt; is set to &lt;code&gt;http&lt;/code&gt; because we&amp;rsquo;ve started Vault in plaintext HTTP mode. Don&amp;rsquo;t do this for production. Plaintext makes the whole secret story useless as all listeners on the network can see your secrets. &lt;code&gt;spring.cloud.vault.scheme&lt;/code&gt; defaults to &lt;code&gt;https&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please note that the token here is taken from the root token. You can create new tokens with:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ vault token-create&#xD;
Key            	Value&#xD;
---            	-----&#xD;
token          	728d26ae-53a6-d8b6-d7a0-c5f62238ea55&#xD;
token_accessor 	2fd7dcba-39d0-04d3-8d6b-096c3529cf14&#xD;
token_duration 	0&#xD;
token_renewable	true&#xD;
token_policies 	[root]
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;a href="#write-data-into-vault" class="anchor" name="write-data-into-vault"&gt;&lt;/a&gt;Write data into Vault&lt;/h3&gt;
&lt;p&gt;Write some data into Vault:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ vault write secret/my-application password=H@rdT0Gu3ss
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;a href="#update-your-spring-boot-application" class="anchor" name="update-your-spring-boot-application"&gt;&lt;/a&gt;Update your Spring Boot Application&lt;/h3&gt;
&lt;p&gt;Now go over to your application launcher class and enhance it to inject the secret. Use the same property name as you used to write it into Vault:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;package example;&#xD;
&#xD;
import javax.annotation.PostConstruct;&#xD;
&#xD;
import org.springframework.beans.factory.annotation.Value;&#xD;
import org.springframework.boot.SpringApplication;&#xD;
import org.springframework.boot.autoconfigure.SpringBootApplication;&#xD;
&#xD;
@SpringBootApplication&#xD;
public class SpringBootVaultHelloWorldApplication {&#xD;
&#xD;
    public static void main(String[] args) {&#xD;
        SpringApplication.run(SpringBootVaultHelloWorldApplication.class, args);&#xD;
    }&#xD;
&#xD;
    @Value(&amp;quot;${password}&amp;quot;)&#xD;
    String password;&#xD;
&#xD;
    @PostConstruct&#xD;
    private void postConstruct() {&#xD;
        System.out.println(&amp;quot;My password is: &amp;quot; + password);&#xD;
    }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All the other things are handled by Spring Cloud Vault itself. Now run your application. &lt;/p&gt;
&lt;p&gt;Congratulations, you&amp;rsquo;ve made it!&lt;/p&gt;&lt;h2&gt;&lt;a href="#outlook" class="anchor" name="outlook"&gt;&lt;/a&gt;Outlook&lt;/h2&gt;
&lt;p&gt;Spring Cloud Vault lives in the Cloud Incubator right now. It supports Token and &lt;a href="https://www.vaultproject.io/docs/auth/app-id.html"&gt;AppId&lt;/a&gt; authentication. Spring Cloud Vault comes with a starter and dependencies for various database integration and RabbitMQ/Consul support.&lt;br/&gt;You can checkout the project and the &lt;a href="https://github.com/spring-cloud-incubator/spring-cloud-vault-config/blob/master/docs/src/main/asciidoc/spring-cloud-vault-config.adoc"&gt;documentation&lt;/a&gt; at &lt;a href="https://github.com/spring-cloud-incubator/spring-cloud-vault-config"&gt;ttps://github.com/spring-cloud-incubator/spring-cloud-vault-config&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We prepared some samples to give you an impression how you could integrate Spring Cloud Vault with your application. You can find the samples at &lt;a href="https://github.com/mp911de/spring-cloud-vault-config-samples"&gt;https://github.com/mp911de/spring-cloud-vault-config-samples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We don&amp;rsquo;t have a timeline yet when to release Spring Cloud Vault. You&amp;rsquo;re invited to join &lt;a href="https://2016.event.springoneplatform.io/presenters/spencer_gibb.html"&gt;Spencer Gibb&amp;rsquo;s&lt;/a&gt; talk at &lt;a href="https://springoneplatform.io/"&gt;SpringOne Platform 2016&lt;/a&gt; about &lt;a href="https://2016.event.springoneplatform.io/schedule/sessions/spring_cloud_with_consul_and_vault.html"&gt;Spring Cloud with Consul and Vault&lt;/a&gt; or mine to learn how to &lt;a href="https://2016.event.springoneplatform.io/schedule/sessions/managing_secrets_at_scale.html"&gt;Manage Secrets at Scale&lt;/a&gt;. We&amp;rsquo;re interested in your feedback.&lt;/p&gt;
&lt;p&gt;Thanks to Alex Soto who showed Vault to me. Vault is made by Hashicorp, the guys who created Vagrant, Consul and other great tools.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow 1.0 RC1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-1-0-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mark Pollack</name>
    </author>
    <id>tag:spring.io,2016-06-21:2534</id>
    <updated>2016-06-21T17:01:52Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the team I am pleased to announce the release of Spring Cloud Data Flow 1.0 RC1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Several exciting new features have been added in this release which carry over to the other Data Flow Server implementations that were also released today.&lt;/p&gt;
&lt;/div&gt;
&lt;table class="tableblock frame-none grid-all" style="width: 45%;"&gt;
&lt;colgroup&gt;
&lt;col style="width: 100%;"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="tableblock halign-left valign-middle"&gt;&lt;div&gt;&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/htmlsingle/#getting-started-deploying-spring-cloud-dataflow"&gt;Data Flow Local Server&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class="tableblock halign-left valign-middle"&gt;&lt;div&gt;&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-cloud-foundry-1-0-0-m3-released"&gt;Data Flow for Cloud Foundry&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class="tableblock halign-left valign-middle"&gt;&lt;div&gt;&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-apache-yarn-1-0-0-rc1-released"&gt;Data Flow for Apache YARN&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class="tableblock halign-left valign-middle"&gt;&lt;div&gt;&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-kubernetes-1-0-0-rc1-released"&gt;Data Flow for Kubernetes&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class="tableblock halign-left valign-middle"&gt;&lt;div&gt;&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-apache-mesos-1-0-0-rc1-released"&gt;Data Flow for Apache Mesos&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Follow the links above for details on features unique to each individual runtime platform.  The highlights of the release are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-flo/wiki"&gt;Spring Flo&lt;/a&gt; is now an open source project and has been integrated into the Spring Cloud Data Flow dashboard allowing you to &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/htmlsingle/#dashboard-flo-streams-designer"&gt;visually design data pipelines in your browser&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/spring-cloud/spring-cloud-dataflow/master/spring-cloud-dataflow-docs/src/main/asciidoc/images/dataflow-flo-create-stream.png" alt="Data Flow Designer Screenshot"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/html/spring-cloud-dataflow-task-events.html"&gt;Batch and Task Events&lt;/a&gt; can be used as a source in a stream definition on YARN and Kubernetes server implementations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/html/getting-started-security.html"&gt;Improved security&lt;/a&gt; by enabling HTTPS access to the server endpoints and support for basic and OAuth 2.0 authentication. The UI and shell have also been updated to support HTTPS and authentication.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The server now uses a RDBMS instead of Redis for stream/task definitions, application registration, and job repositories.  Running a Redis Server is only required for analytics functionality.  The default configuration uses an embedded H2 instance, but Oracle, SqlServer, MySQL/MariaDB, PostgreSQL, H2, and HSQLDB databases are supported.  To use Oracle and SqlServer you will need to create your own Data Flow Server using &lt;a href="https://start.spring.io/"&gt;Spring Initializr&lt;/a&gt; and add the appropriate JDBC driver class.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/htmlsingle/#enable-disable-specific-features"&gt;Feature toggles&lt;/a&gt; to enable/disable analytics, stream, and task functionality.  By default, all three are enabled using the configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For all of the servers, including Data Flow Local Server, applications are no longer pre-registered.  This helps decouple our out of the box applications’ releases from the Data Flow Server release lifecycle.  As a convenience, a list of the latest stream applications are available via user-friendly public URLs.  For example, the shell command&lt;/p&gt;
&lt;div class="literalblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;$ dataflow:&amp;gt;app import --uri http://bit.ly/stream-applications-kafka-maven&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;will load the latest applications with the kafka binder and hosted via our maven repository.  See the reference guide for more information on &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/htmlsingle/#spring-cloud-dataflow-register-apps"&gt;registering groups of applications&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To support centralized and consistent management of an application’s configuration properties, Spring Cloud Config client libraries have been included into the Spring Cloud Data Flow server as well as the Spring Cloud Stream applications provided by the &lt;a href="https://github.com/spring-cloud/spring-cloud-stream-app-starters"&gt;Spring Cloud Stream App Starters repository&lt;/a&gt;.  You can also &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/htmlsingle/#spring-cloud-dataflow-global-properties"&gt;pass common application properties&lt;/a&gt; to all streams when the Data Flow Server starts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can further customize our Spring Cloud Stream and Task application starters by using this version of &lt;a href="http://start-scs.cfapps.io/"&gt;Spring Initializr&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.0.0.RC1/reference/htmlsingle/#spring-cloud-dataflow-stream-app-whitelisting"&gt;Whitelisting of Spring Boot application properties&lt;/a&gt; gives the shell/UI information to show a preferred set of boot properties to display for code completion and application info.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Naming changes.  The UI can now be found under the URL &lt;a href="http://localhost:9393/dashboard" class="bare"&gt;http://localhost:9393/dashboard&lt;/a&gt;.  All references to ‘module’ have now been replaced with ‘app’.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For the complete list of features, bug-fixes, and improvements, please refer to the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow/issues?q=milestone%3A1.0.0.RC1"&gt;closed 1.0.0.RC GitHub issues.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We welcome feedback and contributions! If you have any questions, comments or suggestions, please let us know via &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow/issues"&gt;GitHub Issues&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring-cloud-dataflow"&gt;StackOverflow&lt;/a&gt;, or using the #SpringCloudDataFlow hashtag on Twitter.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Cloud Foundry 1.0.0.M3 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-cloud-foundry-1-0-0-m3-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Eric Bottard</name>
    </author>
    <id>tag:spring.io,2016-06-20:2529</id>
    <updated>2016-06-21T17:01:33Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I am pleased to announce the 1.0.0.M3 release of Spring Cloud Data Flow for Cloud Foundry, a team effort that encompasses many new features under the hood:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This third milestone builds upon the recent RC1 release of Spring Cloud Data Flow and also adds Cloud Foundry specific refinements. Some highlights include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Alignment with Cloud Foundry’s global environment properties such as ORG, API, and URL as opposed to previous naming variants&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds security integration to authenticate against OAUTH backend server that’s compatible with Cloud Foundry&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Publishes security configurations for easier overrides when connecting to OAUTH backend server that’s compatible with Cloud Foundry&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Preliminary iterations on performance testing on Cloud Foundry with and without taps’s in real-time streaming pipeline&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Builds upon feature-toggle support from Spring Cloud Data Flow’s core project to conditionally refine what features get included in each release&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A great way to start using this new release by yourself is to follow &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-cloudfoundry/docs/1.0.0.M3/reference/htmlsingle/#getting-started"&gt;this section&lt;/a&gt; of the reference documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For a complete list of changes and improvements, please refer to the 1.0.0.M3 &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-cloudfoundry/issues?q=milestone%3A1.0.0.M3"&gt;release&lt;/a&gt; as well as the Cloud Foundry deployer &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-cloudfoundry/issues?q=milestone%3A1.0.0.M2"&gt;release details&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Apache YARN 1.0.0.RC1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-apache-yarn-1-0-0-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Janne Valkealahti</name>
    </author>
    <id>tag:spring.io,2016-06-20:2530</id>
    <updated>2016-06-21T16:58:16Z</updated>
    <content type="html">&lt;p&gt;On behalf of the Spring Cloud Data Flow team, I am pleased to announce the 1.0.0.RC1 release of Spring Cloud Data Flow for Apache YARN.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-yarn"&gt;Spring Cloud Data Flow for Apache YARN&lt;/a&gt; allows one to use all the goodness of &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow"&gt;Spring Cloud Data Flow&lt;/a&gt; (like the Shell and UI) while targeting Apache YARN as a backend. Stream components are deployed as individual apps in Apache YARN, leveraging the power of the platform to handle scaling and health monitoring.&lt;/p&gt;
&lt;p&gt;This first release candicate&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Adds several improvements to launching of short-lived applications a.k.a tasks to Apache YARN&lt;/li&gt;
  &lt;li&gt;Builds upon Spring StateMachine 1.1.0.RELEASE that includes new features, stability, and API improvements&lt;/li&gt;
  &lt;li&gt;Adds support to configure command line args as a separate set of properties to be passed to an application when it&amp;rsquo;s deployed. This is an important requirement for running Spring Batch jobs&lt;/li&gt;
  &lt;li&gt;Several Ambari plugin improvements to simplify provisioning of Spring Cloud Data Flow’s YARN server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get started using Spring Cloud Data Flow for Apache YARN &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-yarn/docs/1.0.0.RC1/reference/htmlsingle/#_spring_cloud_data_flow_runtime"&gt;follow these steps&lt;/a&gt; outlined in the reference documentation.&lt;/p&gt;
&lt;p&gt;For a complete list of changes and improvements, please refer to &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-yarn/issues?q=milestone%3A1.0.0.RC1+is%3Aclosed"&gt;1.0.0.RC1 release&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Apache Mesos 1.0.0.RC1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/06/21/spring-cloud-data-flow-for-apache-mesos-1-0-0-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Thomas Risberg</name>
    </author>
    <id>tag:spring.io,2016-06-21:2532</id>
    <updated>2016-06-21T16:57:00Z</updated>
    <content type="html">&lt;p&gt;I am pleased to announce the 1.0.0.RC1 release candidate of Spring Cloud Data Flow for Mesos, a team effort that encompasses many new features under the hood.&lt;/p&gt;
&lt;p&gt;This release candidate builds upon the recent 1.0.0.RC1 release of Spring Cloud Data Flow. Some highlights include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Improves orchestration mechanics by inheriting latest improvements to spring-cloud-deployer contracts and the supported functionalities.&lt;/li&gt;
  &lt;li&gt;Builds upon feature-toggle support from Spring Cloud Data Flow’s core project to conditionally refine what features get included in each release&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get started using Spring Cloud Data Flow for Mesos &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-mesos/docs/1.0.0.RC1/reference/htmlsingle/#_getting_started"&gt;follow these steps&lt;/a&gt; outlined in the reference documentation.&lt;/p&gt;
&lt;p&gt;For a complete list of changes and improvements, please refer to the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-mesos/issues?q=milestone%3A1.0.0.RC1"&gt;1.0.0.RC1 issues&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
</feed>
